server:
  port: 8087

mybatis:
  #  Mapper文件存放的位置
  mapperLocations: classpath:mapper/*.xml
  #  实体类所在的包
  typeAliasesPackage: com.fancky.shardingreadwrite.model.entity

spring:
  shardingsphere:
    # 数据源配置
    datasource:
      common:
        # 数据库驱动类名
        driver-class-name: com.mysql.cj.jdbc.Driver
        # 数据库连接池类名称
        type: com.zaxxer.hikari.HikariDataSource
      # 数据源名称，多数据源以逗号分隔
      names: main,slave1,slave2
      main:
        jdbc-url: jdbc:mysql://127.0.0.1:3307/demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 123456
      slave1:
        jdbc-url: jdbc:mysql://127.0.0.1:3308/demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 123456
      slave2:
        jdbc-url: jdbc:mysql://127.0.0.1:3309/demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 123456
    rules:
      replica-query:
        # 负载均衡算法配置（只配置一种也可以）
        load-balancers:
          # 轮询算法（此处是枚举）（名称自定义）
          round-robin:
            type: ROUND_ROBIN
            props:
              # 工作机器唯一标识
              worker-id: 1
          # 随机访问算法（此处是枚举）（名称自定义）
          random:
            type: RANDOM
            props:
              # 工作机器唯一标识
              worker-id: 1
        data-sources:
          # 名称（名称自定义） 对应官方文档尖括号的配置
          main-slave:
            # 写数据源名称
            primary-data-source-name: main
            # 读数据源名称，多个从数据源用逗号分隔
            replica-data-source-names: slave1,slave2
            # 负载均衡算法名称（把枚举的名称填写到这里）
            load-balancer-name: round-robin

    # 属性配置
    props:
      # 展示修改以后的sql语句
      sql-show: true